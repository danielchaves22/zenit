# Arquivo: ./docker-compose.yml
version: '3.8'

networks:
  monitoring:
    driver: bridge

services:
  # === Backend (API Node/Express + Prisma) ===
  backend:
    build:
      context: ./backend
    container_name: zenit-core-backend
    ports:
      - '3000:3000'
    env_file:
      - ./backend/.env.docker   # vari√°veis de runtime do app
    depends_on:
      - db
    networks:
      - monitoring

  # === Banco de Dados Postgres ===
  db:
    image: postgres:14-alpine
    container_name: zenit-core-db
    restart: always
    ports:
      - '5432:5432'
    env_file:
      - ./.env                  # carrega DB_USER e DB_PASSWORD
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=zenit
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - monitoring

  # === Prometheus ===
  prometheus:
    image: prom/prometheus:latest
    container_name: zenit-prometheus
    ports:
      - '9090:9090'
    volumes:
      - ./backend/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    depends_on:
      - backend
    networks:
      - monitoring

  # === Grafana ===
  grafana:
    image: grafana/grafana:latest
    container_name: zenit-grafana
    ports:
      - '3030:3000'
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus
    networks:
      - monitoring

  # === Frontend Next.js ===
  frontend:
    build:
      context: ./frontend
    container_name: zenit-core-frontend
    ports:
      - '3001:3000'
    env_file:
      - ./frontend/.env.local   # NEXT_PUBLIC_API_URL etc.
    depends_on:
      - backend
    networks:
      - monitoring

volumes:
  postgres-data:
